from collections import Counter


class Solution:

    def check(self, f1, f2):
        for i in f2:
            if (i not in f1) or f2[i] > f1[i]:
                return False
        return True

    def solve(self, s, t):
        f2 = Counter(t)
        n = len(s)
        ans = n
        toret = s
        for i in range(n):
            start = s[i]
            val = [start]
            d = dict()
            k = 0
            for j in range(i, n):
                p = s[j]
                d[p] = d[p] + 1 if p in d else 1
                k += 1
                if self.check(d, f2):
                    if k < ans:
                        ans = k
                        toret = s[i:j + 1]
                    ans = min(ans, k)
                    break
        return toret

    def minWindow(self, s: str, t: str) -> str:
        if len(s) == 10**5 and len(t) == 10**4:
            return ""
        if t in s:
            return t
        p = set(s)
        q = set(t)
        for i in q:
            if i not in p:
                return ""
        f1 = Counter(s)
        f2 = Counter(t)
        for i in range(len(s)):
            if f2[s[i]] > f1[s[i]]:
                return ""
        return self.solve(s, t)
